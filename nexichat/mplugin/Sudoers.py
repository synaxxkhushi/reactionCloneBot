from pyrogram import filters, Client
from pyrogram.types import Message

from config import MONGO_URL, OWNER_ID
from nexichat import nexichat as app
from nexichat import SUDOERS
from nexichat.database import add_sudo, remove_sudo

@Client.on_message(filters.command("addsudo") & filters.user(OWNER_ID))
async def useradd(client, message: Message):
    if MONGO_URL is None:
        return await message.reply_text(
            "**D·¥ú·¥á ·¥õ·¥è  ô·¥è·¥õ's ·¥ò Ä…™·¥†·¥Ä·¥Ñ è …™ss·¥ú·¥ás, Y·¥è·¥ú ·¥Ñ·¥Ä…¥'·¥õ ·¥ç·¥Ä…¥·¥Ä…¢·¥á s·¥ú·¥Ö·¥è ·¥ús·¥á Äs ·¥° ú·¥á…¥  è·¥è·¥ú' Ä·¥á ·¥ús…™…¥…¢ Y·¥ú·¥ã·¥ã…™'s D·¥Ä·¥õ·¥Ä ô·¥Äs·¥á.\n\nP ü·¥á·¥Äs·¥á “ì…™ ü ü  è·¥è·¥ú Ä MONGO_DB_URI …™…¥  è·¥è·¥ú Ä ·¥†·¥Ä Äs ·¥õ·¥è ·¥ús·¥á ·¥õ ú…™s “ì·¥á·¥Ä·¥õ·¥ú Ä·¥á**"
        )
    if not message.reply_to_message:
        if len(message.command) != 2:
            return await message.reply_text(" Ä·¥á·¥ò ü è ·¥õ·¥è ·¥Ä ·¥ús·¥á Ä's ·¥ç·¥áss·¥Ä…¢·¥á ·¥è Ä …¢…™·¥†·¥á ·¥ús·¥á Ä…¥·¥Ä·¥ç·¥á/·¥ús·¥á Ä_…™·¥Ö.")
        user = message.text.split(None, 1)[1]
        if "@" in user:
            user = user.replace("@", "")
        user = await client.get_users(user)
        if user.id in SUDOERS:
            return await message.reply_text(f"{user.mention} …™s ·¥Ä ü Ä·¥á·¥Ä·¥Ö è ·¥Ä s·¥ú·¥Ö·¥è ·¥ús·¥á Ä.")
        added = await add_sudo(user.id)
        if added:
            SUDOERS.add(user.id)
            await message.reply_text(f"·¥Ä·¥Ö·¥Ö·¥á·¥Ö **{user.mention}** ·¥õ·¥è s·¥ú·¥Ö·¥è ·¥ús·¥á Äs.")
        else:
            await message.reply_text("“ì·¥Ä…™ ü·¥á·¥Ö")
        return
    if message.reply_to_message.from_user.id in SUDOERS:
        return await message.reply_text(
            f"{message.reply_to_message.from_user.mention} …™s ·¥Ä ü Ä·¥á·¥Ä·¥Ö è ·¥Ä s·¥ú·¥Ö·¥è ·¥ús·¥á Ä."
        )
    added = await add_sudo(message.reply_to_message.from_user.id)
    if added:
        SUDOERS.add(message.reply_to_message.from_user.id)
        await message.reply_text(
            f"·¥Ä·¥Ö·¥Ö·¥á·¥Ö **{message.reply_to_message.from_user.mention}** ·¥õ·¥è s·¥ú·¥Ö·¥è ·¥ús·¥á Äs."
        )
    else:
        await message.reply_text("“ì·¥Ä…™ ü·¥á·¥Ö")
    return


@Client.on_message(filters.command(["rmsudo", "delsudo"]) & filters.user(OWNER_ID))
async def userdel(client, message: Message):
    if MONGO_URL is None:
        return await message.reply_text(
            "**D·¥ú·¥á ·¥õ·¥è  ô·¥è·¥õ's ·¥ò Ä…™·¥†·¥Ä·¥Ñ è …™ss·¥ú·¥ás, Y·¥è·¥ú ·¥Ñ·¥Ä…¥'·¥õ ·¥ç·¥Ä…¥·¥Ä…¢·¥á s·¥ú·¥Ö·¥è ·¥ús·¥á Äs ·¥° ú·¥á…¥  è·¥è·¥ú' Ä·¥á ·¥ús…™…¥…¢ Y·¥ú·¥ã·¥ã…™'s D·¥Ä·¥õ·¥Ä ô·¥Äs·¥á.\n\nP ü·¥á·¥Äs·¥á “ì…™ ü ü  è·¥è·¥ú Ä MONGO_DB_URI …™…¥  è·¥è·¥ú Ä ·¥†·¥Ä Äs ·¥õ·¥è ·¥ús·¥á ·¥õ ú…™s “ì·¥á·¥Ä·¥õ·¥ú Ä·¥á**"
        )
    if not message.reply_to_message:
        if len(message.command) != 2:
            return await message.reply_text(" Ä·¥á·¥ò ü è ·¥õ·¥è ·¥Ä ·¥ús·¥á Ä's ·¥ç·¥áss·¥Ä…¢·¥á ·¥è Ä …¢…™·¥†·¥á ·¥ús·¥á Ä…¥·¥Ä·¥ç·¥á/·¥ús·¥á Ä_…™·¥Ö.")
        user = message.text.split(None, 1)[1]
        if "@" in user:
            user = user.replace("@", "")
        user = await client.get_users(user)
        if user.id not in SUDOERS:
            return await message.reply_text("…¥·¥è·¥õ ·¥Ä ·¥ò·¥Ä Ä·¥õ ·¥èÍú∞  ô·¥è·¥õ's s·¥ú·¥Ö·¥è.")
        removed = await remove_sudo(user.id)
        if removed:
            SUDOERS.remove(user.id)
            await message.reply_text(" Ä·¥á·¥ç·¥è·¥†·¥á·¥Ö Íú∞ Ä·¥è·¥ç  ô·¥è·¥õ's s·¥ú·¥Ö·¥è ·¥ús·¥á Ä.")
            return
        await message.reply_text("s·¥è·¥ç·¥á·¥õ ú…™…¥…¢ ·¥° Ä·¥è…¥…¢  ú·¥Ä·¥ò·¥ò·¥á…¥·¥á·¥Ö")
        return
    user_id = message.reply_to_message.from_user.id
    if user_id not in SUDOERS:
        return await message.reply_text("…¥·¥è·¥õ ·¥Ä ·¥ò·¥Ä Ä·¥õ ·¥èÍú∞  ô·¥è·¥õ's s·¥ú·¥Ö·¥è.")
    removed = await remove_sudo(user_id)
    if removed:
        SUDOERS.remove(user_id)
        await message.reply_text(" Ä·¥á·¥ç·¥è·¥†·¥á·¥Ö Íú∞ Ä·¥è·¥ç  ô·¥è·¥õ's s·¥ú·¥Ö·¥è ·¥ús·¥á Ä.")
        return
    await message.reply_text("s·¥è·¥ç·¥á·¥õ ú…™…¥…¢ ·¥° Ä·¥è…¥…¢  ú·¥Ä·¥ò·¥ò·¥á…¥·¥á·¥Ö.")


@Client.on_message(filters.command(["sudo", "sudolist"]))
async def sudoers_list(client, message: Message):
    text = "üî•<u> **·¥è·¥°…¥·¥á Ä:**</u>\n"
    count = 0
    try:
        user = await client.get_users(OWNER_ID)
        user_name = user.first_name if not user.mention else user.mention
        count += 1
        text += f"{count}‚û§ {user_name}\n"
    except Exception:
        pass

    smex = 0
    for user_id in SUDOERS:
        if user_id != OWNER_ID:
            try:
                user = await client.get_users(user_id)
                user_name = user.first_name if not user.mention else user.mention
                if smex == 0:
                    smex += 1
                    text += "\nüî•<u> **s·¥ú·¥Ö·¥è·¥á Äs:**</u>\n"
                count += 1
                text += f"{count}‚û§ {user_name} ({user.id})\n"
            except Exception:
                continue

    if not text:
        await message.reply_text("…¥·¥è s·¥ú·¥Ö·¥è ·¥ús·¥á Äs “ì·¥è·¥ú…¥·¥Ö.")
    else:
        await message.reply_text(text)
